Problem Description:

Given a binary tree, return the postorder traversal of its nodes' values.
For the tree given Postorder traversal will be:
        1
      2   3
    4   5

Postorder Traversal Means: Process (Left, Right, Root) : 4 5 2 3 1
Note that input and output are being handled by a main() method behind the scenes, so you do NOT have to implement the main() method or any I/O here. The inputs are sent as arguments to the function you have to implement.
Youâ€™d have to implement the function defined in the stub, use the arguments, and return the answer based on the return type of the function.
The structure of the tree is given as a reference for you while writing the code. Do not make any modifications to it, or any of the rest of the stub, or the tests would fail.

Input format:

First line contains T, denoting the number of test cases given.
For each test case, we follow the following format:
First line contains N, denoting the number of nodes the tree has.
In each test case tree will be given to you.

Output format
For each test case,print in a new line n space separated integers. The values of postorder traversal of the nodes.

Sample Input 1
1
5
5 1 4 3 6
1 2 3
2 -1 -1
3 4 5
4 -1 -1
5 -1 -1

Sample Output 1
1 3 6 4 5

Explanation 1
Treeview:
      5
    1   4
       3  6

Sample Input 2
1
3
2 1 3
1 2 3
2 -1 -1
3 -1 -1

Sample Output 2
1 3 2

Explanation 2
Treeview :

image

Constraints
1<=T<=1000

1<=N<=10000

0 <= A[i] <= 10^9

It's guaranteed that the sum of Number of tree nodes for all test cases will be less than 500000.
